nextflow_pipeline {

    name "Test Workflow main.nf + ENA test data"
    script "../main.nf"
    tag "pipeline"


    test("Public ENA data test") {
        tag "ena"

        setup {
            run("UNTAR") {
                script "modules/nf-core/untar/main.nf"
                process {
                    """
                    input[0] = Channel.of([
                        [],
                        file(
                            'https://github.com/rki-mf1/omnifluss_data/raw/INV_illumina/databases/segment_db/ena_segment_db.tar.gz',
                            checkIfExists: true
                        )
                    ])
                    """
                }
            }
        }

        when {
            params {
                input                       = 'https://github.com/rki-mf1/omnifluss_data/raw/INV_illumina/samplesheets/sample_sheet.ENA.csv'
                fastp_adapter_fasta         = 'https://github.com/rki-mf1/omnifluss_data/raw/INV_illumina/NexteraTransposase.fasta'
                reference_selection         = 'kma'
                reference_selection_db      = UNTAR.out.untar.map{ it[1] }
                consensus_mincov            = 5
                skip_taxonomic_filtering    = true
                outdir                      = "$outputDir"
            }
        }

        then {
            // stable_name: All files + folders in ${params.outdir}/ with a stable name
            def stable_name = getAllFilesFromDir(params.outdir, relative: true, includeDir: true, ignore: ['pipeline_info/*.{html,json,txt}'])
            // stable_path: All files in ${params.outdir}/ with stable content
            def stable_path = getAllFilesFromDir(params.outdir, ignoreFile: 'tests/.nftignore')
            assertAll(
                { assert workflow.success},
                { assert snapshot(
                    // Number of successful tasks
                    workflow.trace.succeeded().size(),
                    // pipeline versions.yml file for multiqc from which Nextflow version is removed because we test pipelines on multiple Nextflow versions
                    removeNextflowVersion("$outputDir/pipeline_info/omnifluss_software_mqc_versions.yml"),
                    // All stable path name, with a relative path
                    stable_name,
                    // All files with stable contents
                    stable_path
                ).match() }
            )
        }
    }
}
