nextflow_pipeline {

    name "Test Workflow main.nf"
    script "../main.nf"
    tag "pipeline"
    tag "vanilla"

    test("Vanilla stub test") {
        tag "stub"
        options '-stub'

        when {
            params {
                input = 'https://raw.githubusercontent.com/nf-core/test-datasets/viralrecon/samplesheet/samplesheet_test_illumina_amplicon.csv'
                fasta = 'https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/sarscov2/genome/genome.fasta'

                // $outputDir is a global nf-test variable
                // https://www.nf-test.com/docs/testcases/global_variables/
                outdir = "$outputDir"
            }
        }

        then {
            assertAll(
                { assert workflow.success }
                // I refrain from complete snapshot here, so that one can use this for protopyping
            )
        }

    }

    test("Vanilla test") {

        when {
            params {
                input = 'https://raw.githubusercontent.com/nf-core/test-datasets/viralrecon/samplesheet/samplesheet_test_illumina_amplicon.csv'
                fasta = 'https://raw.githubusercontent.com/nf-core/test-datasets/modules/data/genomics/sarscov2/genome/genome.fasta'

                // $outputDir is a global nf-test variable
                // https://www.nf-test.com/docs/testcases/global_variables/
                outdir = "$outputDir"
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(removeNextflowVersion("$outputDir/pipeline_info/nf_core_pipeline_software_mqc_versions.yml")).match("software_versions") }
            )
        }

    }

}
