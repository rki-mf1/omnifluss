Changes in component 'nf-core/bam_stats_samtools'
Changes in 'bam_stats_samtools/main.nf':
--- subworkflows/nf-core/bam_stats_samtools/main.nf
+++ subworkflows/nf-core/bam_stats_samtools/main.nf
@@ -14,7 +14,17 @@
     main:
     ch_versions = Channel.empty()
 
-    SAMTOOLS_STATS ( ch_bam_bai, ch_fasta )
+    //sort channels to maintain order across different channels
+    ch_bam_bai_cpy = ch_bam_bai.map {meta, bam, bai -> return [meta.id, meta, bam, bai]} 
+    ch_fasta_cpy = ch_fasta.map {meta, fasta -> return [meta.id, meta, fasta]} 
+
+    ch_samtools_stats_input = ch_bam_bai_cpy.join(ch_fasta_cpy)
+        .multiMap{_sample_id, meta, bam, bai, meta2, reference ->
+            ch_bam_bai: [ meta, bam, bai ]
+            ch_ref: [ meta2, reference ]
+        } 
+
+    SAMTOOLS_STATS ( ch_samtools_stats_input.ch_bam_bai, ch_samtools_stats_input.ch_ref )
     ch_versions = ch_versions.mix(SAMTOOLS_STATS.out.versions)
 
     SAMTOOLS_FLAGSTAT ( ch_bam_bai )

'subworkflows/nf-core/bam_stats_samtools/meta.yml' is unchanged
Changes in 'bam_stats_samtools/tests/main.nf.test':
--- subworkflows/nf-core/bam_stats_samtools/tests/main.nf.test
+++ subworkflows/nf-core/bam_stats_samtools/tests/main.nf.test
@@ -15,6 +15,9 @@
     test("test_bam_stats_samtools_single_end") {
 
         when {
+            params {
+                outdir   = "$outputDir"
+            }
             workflow {
                 """
                 input[0] = Channel.of([
@@ -33,11 +36,9 @@
         then {
             assertAll(
                 { assert workflow.success},
-                { assert snapshot(
-                    workflow.out.flagstat,
-                    workflow.out.idxstats,
-                    workflow.out.stats,
-                    workflow.out.versions).match() }
+                { assert snapshot(workflow.out.stats).match("test_bam_stats_samtools_single_end_stats") },
+                { assert snapshot(workflow.out.flagstat).match("test_bam_stats_samtools_single_end_flagstats") },
+                { assert snapshot(workflow.out.idxstats).match("test_bam_stats_samtools_single_end_idxstats") }
             )
         }
     }
@@ -45,6 +46,9 @@
     test("test_bam_stats_samtools_paired_end") {
 
         when {
+            params {
+                outdir   = "$outputDir"
+            }
             workflow {
                 """
                 input[0] = Channel.of([
@@ -63,11 +67,9 @@
         then {
             assertAll(
                 { assert workflow.success },
-                { assert snapshot(
-                    workflow.out.flagstat,
-                    workflow.out.idxstats,
-                    workflow.out.stats,
-                    workflow.out.versions).match() }
+                { assert snapshot(workflow.out.stats).match("test_bam_stats_samtools_paired_end_stats") },
+                { assert snapshot(workflow.out.flagstat).match("test_bam_stats_samtools_paired_end_flagstats") },
+                { assert snapshot(workflow.out.idxstats).match("test_bam_stats_samtools_paired_end_idxstats") }
             )
         }
     }
@@ -75,6 +77,9 @@
     test("test_bam_stats_samtools_paired_end_cram") {
 
         when {
+            params {
+                outdir   = "$outputDir"
+            }
             workflow {
                 """
                 input[0] = Channel.of([
@@ -93,96 +98,11 @@
         then {
             assertAll(
                 { assert workflow.success},
-                { assert snapshot(
-                    workflow.out.flagstat,
-                    workflow.out.idxstats,
-                    workflow.out.stats,
-                    workflow.out.versions).match() }
+                { assert snapshot(workflow.out.stats).match("test_bam_stats_samtools_paired_end_cram_stats") },
+                { assert snapshot(workflow.out.flagstat).match("test_bam_stats_samtools_paired_end_cram_flagstats") },
+                { assert snapshot(workflow.out.idxstats).match("test_bam_stats_samtools_paired_end_cram_idxstats") }
             )
         }
     }
 
-    test ("test_bam_stats_samtools_single_end - stub") {
-
-        options "-stub"
-
-        when {
-            workflow {
-                """
-                input[0] = Channel.of([
-                    [ id:'test', single_end:true ], // meta map
-                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.single_end.sorted.bam', checkIfExists: true),
-                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.single_end.sorted.bam.bai', checkIfExists: true)
-                ])
-                input[1] = Channel.of([
-                    [ id:'genome' ],
-                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)
-                ])
-                """
-            }
-        }
-
-        then {
-            assertAll(
-                { assert workflow.success},
-                { assert snapshot(workflow.out).match() }
-            )
-        }
-    }
-
-    test("test_bam_stats_samtools_paired_end - stub") {
-
-        options "-stub"
-
-        when {
-            workflow {
-                """
-                input[0] = Channel.of([
-                    [ id:'test', single_end:true ], // meta map
-                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.paired_end.sorted.bam', checkIfExists: true),
-                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.paired_end.sorted.bam.bai', checkIfExists: true)
-                ])
-                input[1] = Channel.of([
-                    [ id:'genome' ],
-                    file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)
-                ])
-                """
-            }
-        }
-
-        then {
-            assertAll(
-                { assert workflow.success },
-                { assert snapshot(workflow.out).match() }
-            )
-        }
-    }
-
-    test("test_bam_stats_samtools_paired_end_cram - stub") {
-
-        options "-stub"
-
-        when {
-            workflow {
-                """
-                input[0] = Channel.of([
-                    [ id:'test', single_end:false ], // meta map
-                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/cram/test.paired_end.sorted.cram', checkIfExists: true),
-                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/illumina/cram/test.paired_end.sorted.cram.crai', checkIfExists: true)
-                ])
-                input[1] = Channel.of([
-                    [ id:'genome' ],
-                    file(params.modules_testdata_base_path + 'genomics/homo_sapiens/genome/genome.fasta', checkIfExists: true)
-                ])
-                """
-            }
-        }
-
-        then {
-            assertAll(
-                { assert workflow.success},
-                { assert snapshot(workflow.out).match() }
-            )
-        }
-    }
 }

Changes in 'bam_stats_samtools/tests/main.nf.test.snap':
--- subworkflows/nf-core/bam_stats_samtools/tests/main.nf.test.snap
+++ subworkflows/nf-core/bam_stats_samtools/tests/main.nf.test.snap
@@ -1,230 +1,59 @@
 {
-    "test_bam_stats_samtools_paired_end - stub": {
+    "test_bam_stats_samtools_paired_end_cram_flagstats": {
         "content": [
-            {
-                "0": [
-                    [
-                        {
-                            "id": "test",
-                            "single_end": true
-                        },
-                        "test.stats:md5,d41d8cd98f00b204e9800998ecf8427e"
-                    ]
-                ],
-                "1": [
-                    [
-                        {
-                            "id": "test",
-                            "single_end": true
-                        },
-                        "test.flagstat:md5,d41d8cd98f00b204e9800998ecf8427e"
-                    ]
-                ],
-                "2": [
-                    [
-                        {
-                            "id": "test",
-                            "single_end": true
-                        },
-                        "test.idxstats:md5,d41d8cd98f00b204e9800998ecf8427e"
-                    ]
-                ],
-                "3": [
-                    "versions.yml:md5,3c485730f712b115bcdc235e7294133b",
-                    "versions.yml:md5,90f593a26a2d53e0f0345df7888f448e",
-                    "versions.yml:md5,9ae003814e63a0907d52eec64d5d3ca3"
-                ],
-                "flagstat": [
-                    [
-                        {
-                            "id": "test",
-                            "single_end": true
-                        },
-                        "test.flagstat:md5,d41d8cd98f00b204e9800998ecf8427e"
-                    ]
-                ],
-                "idxstats": [
-                    [
-                        {
-                            "id": "test",
-                            "single_end": true
-                        },
-                        "test.idxstats:md5,d41d8cd98f00b204e9800998ecf8427e"
-                    ]
-                ],
-                "stats": [
-                    [
-                        {
-                            "id": "test",
-                            "single_end": true
-                        },
-                        "test.stats:md5,d41d8cd98f00b204e9800998ecf8427e"
-                    ]
-                ],
-                "versions": [
-                    "versions.yml:md5,3c485730f712b115bcdc235e7294133b",
-                    "versions.yml:md5,90f593a26a2d53e0f0345df7888f448e",
-                    "versions.yml:md5,9ae003814e63a0907d52eec64d5d3ca3"
+            [
+                [
+                    {
+                        "id": "test",
+                        "single_end": false
+                    },
+                    "test.flagstat:md5,a53f3d26e2e9851f7d528442bbfe9781"
                 ]
-            }
+            ]
         ],
         "meta": {
             "nf-test": "0.8.4",
-            "nextflow": "24.04.2"
+            "nextflow": "24.01.0"
         },
-        "timestamp": "2024-07-03T12:20:06.699297"
+        "timestamp": "2023-11-06T09:31:26.194017574"
     },
-    "test_bam_stats_samtools_single_end - stub": {
+    "test_bam_stats_samtools_paired_end_stats": {
         "content": [
-            {
-                "0": [
-                    [
-                        {
-                            "id": "test",
-                            "single_end": true
-                        },
-                        "test.stats:md5,d41d8cd98f00b204e9800998ecf8427e"
-                    ]
-                ],
-                "1": [
-                    [
-                        {
-                            "id": "test",
-                            "single_end": true
-                        },
-                        "test.flagstat:md5,d41d8cd98f00b204e9800998ecf8427e"
-                    ]
-                ],
-                "2": [
-                    [
-                        {
-                            "id": "test",
-                            "single_end": true
-                        },
-                        "test.idxstats:md5,d41d8cd98f00b204e9800998ecf8427e"
-                    ]
-                ],
-                "3": [
-                    "versions.yml:md5,3c485730f712b115bcdc235e7294133b",
-                    "versions.yml:md5,90f593a26a2d53e0f0345df7888f448e",
-                    "versions.yml:md5,9ae003814e63a0907d52eec64d5d3ca3"
-                ],
-                "flagstat": [
-                    [
-                        {
-                            "id": "test",
-                            "single_end": true
-                        },
-                        "test.flagstat:md5,d41d8cd98f00b204e9800998ecf8427e"
-                    ]
-                ],
-                "idxstats": [
-                    [
-                        {
-                            "id": "test",
-                            "single_end": true
-                        },
-                        "test.idxstats:md5,d41d8cd98f00b204e9800998ecf8427e"
-                    ]
-                ],
-                "stats": [
-                    [
-                        {
-                            "id": "test",
-                            "single_end": true
-                        },
-                        "test.stats:md5,d41d8cd98f00b204e9800998ecf8427e"
-                    ]
-                ],
-                "versions": [
-                    "versions.yml:md5,3c485730f712b115bcdc235e7294133b",
-                    "versions.yml:md5,90f593a26a2d53e0f0345df7888f448e",
-                    "versions.yml:md5,9ae003814e63a0907d52eec64d5d3ca3"
+            [
+                [
+                    {
+                        "id": "test",
+                        "single_end": true
+                    },
+                    "test.stats:md5,7afd486ad6abb9a2a3dac90c99e1d87b"
                 ]
-            }
+            ]
         ],
         "meta": {
             "nf-test": "0.8.4",
-            "nextflow": "24.04.2"
+            "nextflow": "23.10.1"
         },
-        "timestamp": "2024-07-03T12:19:57.708621"
+        "timestamp": "2024-05-29T07:46:05.502831991"
     },
-    "test_bam_stats_samtools_paired_end_cram - stub": {
+    "test_bam_stats_samtools_paired_end_flagstats": {
         "content": [
-            {
-                "0": [
-                    [
-                        {
-                            "id": "test",
-                            "single_end": false
-                        },
-                        "test.stats:md5,d41d8cd98f00b204e9800998ecf8427e"
-                    ]
-                ],
-                "1": [
-                    [
-                        {
-                            "id": "test",
-                            "single_end": false
-                        },
-                        "test.flagstat:md5,d41d8cd98f00b204e9800998ecf8427e"
-                    ]
-                ],
-                "2": [
-                    [
-                        {
-                            "id": "test",
-                            "single_end": false
-                        },
-                        "test.idxstats:md5,d41d8cd98f00b204e9800998ecf8427e"
-                    ]
-                ],
-                "3": [
-                    "versions.yml:md5,3c485730f712b115bcdc235e7294133b",
-                    "versions.yml:md5,90f593a26a2d53e0f0345df7888f448e",
-                    "versions.yml:md5,9ae003814e63a0907d52eec64d5d3ca3"
-                ],
-                "flagstat": [
-                    [
-                        {
-                            "id": "test",
-                            "single_end": false
-                        },
-                        "test.flagstat:md5,d41d8cd98f00b204e9800998ecf8427e"
-                    ]
-                ],
-                "idxstats": [
-                    [
-                        {
-                            "id": "test",
-                            "single_end": false
-                        },
-                        "test.idxstats:md5,d41d8cd98f00b204e9800998ecf8427e"
-                    ]
-                ],
-                "stats": [
-                    [
-                        {
-                            "id": "test",
-                            "single_end": false
-                        },
-                        "test.stats:md5,d41d8cd98f00b204e9800998ecf8427e"
-                    ]
-                ],
-                "versions": [
-                    "versions.yml:md5,3c485730f712b115bcdc235e7294133b",
-                    "versions.yml:md5,90f593a26a2d53e0f0345df7888f448e",
-                    "versions.yml:md5,9ae003814e63a0907d52eec64d5d3ca3"
+            [
+                [
+                    {
+                        "id": "test",
+                        "single_end": true
+                    },
+                    "test.flagstat:md5,4f7ffd1e6a5e85524d443209ac97d783"
                 ]
-            }
+            ]
         ],
         "meta": {
             "nf-test": "0.8.4",
-            "nextflow": "24.04.2"
+            "nextflow": "24.01.0"
         },
-        "timestamp": "2024-07-03T12:20:17.051493"
+        "timestamp": "2024-01-18T17:17:27.717482"
     },
-    "test_bam_stats_samtools_single_end": {
+    "test_bam_stats_samtools_single_end_flagstats": {
         "content": [
             [
                 [
@@ -234,7 +63,70 @@
                     },
                     "test.flagstat:md5,2191911d72575a2358b08b1df64ccb53"
                 ]
-            ],
+            ]
+        ],
+        "meta": {
+            "nf-test": "0.8.4",
+            "nextflow": "24.01.0"
+        },
+        "timestamp": "2023-11-06T09:26:10.340046381"
+    },
+    "test_bam_stats_samtools_paired_end_cram_idxstats": {
+        "content": [
+            [
+                [
+                    {
+                        "id": "test",
+                        "single_end": false
+                    },
+                    "test.idxstats:md5,e179601fa7b8ebce81ac3765206f6c15"
+                ]
+            ]
+        ],
+        "meta": {
+            "nf-test": "0.8.4",
+            "nextflow": "24.01.0"
+        },
+        "timestamp": "2023-11-06T09:31:26.207052003"
+    },
+    "test_bam_stats_samtools_single_end_stats": {
+        "content": [
+            [
+                [
+                    {
+                        "id": "test",
+                        "single_end": true
+                    },
+                    "test.stats:md5,4a0c429c661d6aa0b60acb9309da642d"
+                ]
+            ]
+        ],
+        "meta": {
+            "nf-test": "0.8.4",
+            "nextflow": "23.10.1"
+        },
+        "timestamp": "2024-05-29T07:45:59.612412212"
+    },
+    "test_bam_stats_samtools_paired_end_idxstats": {
+        "content": [
+            [
+                [
+                    {
+                        "id": "test",
+                        "single_end": true
+                    },
+                    "test.idxstats:md5,df60a8c8d6621100d05178c93fb053a2"
+                ]
+            ]
+        ],
+        "meta": {
+            "nf-test": "0.8.4",
+            "nextflow": "24.01.0"
+        },
+        "timestamp": "2024-01-18T17:17:27.726719"
+    },
+    "test_bam_stats_samtools_single_end_idxstats": {
+        "content": [
             [
                 [
                     {
@@ -243,89 +135,16 @@
                     },
                     "test.idxstats:md5,613e048487662c694aa4a2f73ca96a20"
                 ]
-            ],
-            [
-                [
-                    {
-                        "id": "test",
-                        "single_end": true
-                    },
-                    "test.stats:md5,4a0c429c661d6aa0b60acb9309da642d"
-                ]
-            ],
-            [
-                "versions.yml:md5,3c485730f712b115bcdc235e7294133b",
-                "versions.yml:md5,90f593a26a2d53e0f0345df7888f448e",
-                "versions.yml:md5,9ae003814e63a0907d52eec64d5d3ca3"
             ]
         ],
         "meta": {
             "nf-test": "0.8.4",
-            "nextflow": "24.04.2"
+            "nextflow": "24.01.0"
         },
-        "timestamp": "2024-07-03T12:19:25.801394"
+        "timestamp": "2023-11-06T09:26:10.349439801"
     },
-    "test_bam_stats_samtools_paired_end": {
+    "test_bam_stats_samtools_paired_end_cram_stats": {
         "content": [
-            [
-                [
-                    {
-                        "id": "test",
-                        "single_end": true
-                    },
-                    "test.flagstat:md5,4f7ffd1e6a5e85524d443209ac97d783"
-                ]
-            ],
-            [
-                [
-                    {
-                        "id": "test",
-                        "single_end": true
-                    },
-                    "test.idxstats:md5,df60a8c8d6621100d05178c93fb053a2"
-                ]
-            ],
-            [
-                [
-                    {
-                        "id": "test",
-                        "single_end": true
-                    },
-                    "test.stats:md5,7afd486ad6abb9a2a3dac90c99e1d87b"
-                ]
-            ],
-            [
-                "versions.yml:md5,3c485730f712b115bcdc235e7294133b",
-                "versions.yml:md5,90f593a26a2d53e0f0345df7888f448e",
-                "versions.yml:md5,9ae003814e63a0907d52eec64d5d3ca3"
-            ]
-        ],
-        "meta": {
-            "nf-test": "0.8.4",
-            "nextflow": "24.04.2"
-        },
-        "timestamp": "2024-07-03T12:19:36.158768"
-    },
-    "test_bam_stats_samtools_paired_end_cram": {
-        "content": [
-            [
-                [
-                    {
-                        "id": "test",
-                        "single_end": false
-                    },
-                    "test.flagstat:md5,a53f3d26e2e9851f7d528442bbfe9781"
-                ]
-            ],
-            [
-                [
-                    {
-                        "id": "test",
-                        "single_end": false
-                    },
-                    "test.idxstats:md5,e179601fa7b8ebce81ac3765206f6c15"
-                ]
-            ],
             [
                 [
                     {
@@ -334,17 +153,12 @@
                     },
                     "test.stats:md5,16b59a1f2c99d9fe30f711adc3ebe32d"
                 ]
-            ],
-            [
-                "versions.yml:md5,3c485730f712b115bcdc235e7294133b",
-                "versions.yml:md5,90f593a26a2d53e0f0345df7888f448e",
-                "versions.yml:md5,9ae003814e63a0907d52eec64d5d3ca3"
             ]
         ],
         "meta": {
             "nf-test": "0.8.4",
-            "nextflow": "24.04.2"
+            "nextflow": "23.10.1"
         },
-        "timestamp": "2024-07-03T12:19:46.625907"
+        "timestamp": "2024-05-29T07:46:11.96999343"
     }
 }
'subworkflows/nf-core/bam_stats_samtools/tests/tags.yml' is unchanged
************************************************************
