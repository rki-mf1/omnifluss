nextflow_workflow {

    name "Test Subworkflow BAM_CALL_VARIANT_ALL"
    script "../main.nf"
    // Incude a nextflow.config for the test if needed
    config "subworkflows/local/bam_call_variant_all/tests/nextflow.config"
    workflow "BAM_CALL_VARIANT_ALL"

    //  Add tags for the subworkflow
    tag "subworkflows"
    tag "subworkflows/local"
    tag "subworkflows/bam_call_variant_all"
    tag "bam_call_variant_all"
    // Add tags for all modules used within this subworkflow.
    tag "lofreq/viterbi"
    tag "lofreq/indelqual"
    tag "lofreq/callparallel"
    tag "samtools/index"


    // Test name preferably indicating the test-data and file-format used
    test("sarscov2 - bam") {

        // Activate the stub mode for nextflow
        //options '-stub'

        when {
            workflow {
                """
                input[0] = 'lofreq'
                input[1] = [ [ id:'test', single_end:false ], // meta map
                            [ file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.paired_end.sorted.bam', checkIfExists: true) ]
                        ]
                input[2] = file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta', checkIfExists: true)
                input[3] = file(params.modules_testdata_base_path + 'genomics/sarscov2/genome/genome.fasta.fai', checkIfExists: true)
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success},
                { assert snapshot(workflow.out).match()}
            )
        }
    }
}