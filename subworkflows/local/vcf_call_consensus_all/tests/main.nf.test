nextflow_workflow {

    name "Test Subworkflow VCF_CALL_CONSENSUS_ALL"
    script "../main.nf"
    config "./nextflow.config"
    workflow "VCF_CALL_CONSENSUS_ALL"

    tag "subworkflows"
    tag "subworkflows_nfcore"
    tag "subworkflows/vcf_call_consensus_all"
    tag "bedtools"
    tag "bcftools"
    tag "biopython"
    tag "pyvcf"


    test("vcf_call_consensus_all") {
        options '-stub'
        when {
            workflow {
                """
                input[0] = "bcftools"
                input[1] = Channel.of([ 
                    [ id:'test', single_end:false],
                    [ file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/vcf/test.vcf.gz', checkIfExists: true) ]
                ]  )         
                input[2] = Channel.of([ 
                    [ id:'test', single_end:false],
                    [ file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bam/test.paired_end.bam', checkIfExists: true) ]
                ])
                input[3] = Channel.of([ 
                    [ id:'test', single_end:false],
                    [ file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/bedgraph/test.bedgraph', checkIfExists: true) ]
                ])
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success},
                { assert snapshot(workflow.out).match()}
            )
        }
    }
}